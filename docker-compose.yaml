version: "2.3"
services:
  morse:
    build:
      context: ./docker
      dockerfile: Dockerfile.app
    # image: my_melodic_image
    runtime: nvidia
    container_name: morse
    depends_on:
      - master
    devices:
      - "/dev/dri"
      - "/dev/snd"
    env_file:
      - .env
    environment:
      - "ROS_HOSTNAME=morse"
      - "ROS_MASTER_URI=http://master:11311"
      - "QT_X11_NO_MITSHM=1"
      - "DISPLAY=$DISPLAY"
      - "XAUTHORITY=$XAUTH"
      - "QT_GRAPHICSSYSTEM=native"
      - "PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native"
    volumes:
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /var/run/dbus:/var/run/dbus:ro
      - /etc/machine-id:/etc/machine-id:ro
      - ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native
      - ~/.config/pulse/cookie:/root/.config/pulse/cookie
      - ./docker/hmrs_hostpital_simulation/morse_hospital_sim:/ros_ws/morse_hospital_sim
    expose:
      - "8081"
      - "3000"
      - "3001"
    # command: /bin/bash -c "source /ros_ws/devel/setup.bash && morse run morse_hospital_sim"
    # command:
      # - roslaunch rosbridge_server rosbridge_websocket.launch --wait
      # - rosrun tf2_web_republisher tf2_web_republisher
      # - /bin/bash -c "source /ros_ws/devel/setup.bash && Xvfb -screen 0 100x100x24 :2 & DISPLAY=:2 morse run morse_hospital_sim"
    # command: rosrun tf2_web_republisher tf2_web_republisher
    # command: 
    command: /bin/bash -c "source /ros_ws/devel/setup.bash && Xvfb -screen 0 100x100x24 :2 & DISPLAY=:2 morse run morse_hospital_sim"
    # command: /bin/bash -c "source /ros_ws/devel/setup.bash && morse run morse_hospital_sim"
    # command: /bin/bash -c "source /ros_ws/devel/setup.bash && Xvfb -screen 0 1024x768x24 :2 & DISPLAY=:2 morse run morse_hospital_sim"
    # command: /bin/bash -c "source /ros_ws/devel/setup.bash && Xvfb -screen 0 100x100x24 :2 & DISPLAY=:2 morse run morse_hospital_sim"
    tty: true
    # privileged: true
    networks:
      morsesimnet:
        ipv4_address: 10.6.0.2

  master:
    build:
      context: ./docker
      dockerfile: Dockerfile.app
    container_name: master
    command: /bin/bash -c "source /ros_ws/devel/setup.bash && roscore"
    networks:
      morsesimnet:
        ipv4_address: 10.6.0.5

  motion_ctrl:
    build:
      context: ./docker
      dockerfile: Dockerfile.motion
    container_name: motion_ctrl
    runtime: runc
    depends_on:
      - master
      - morse
    ports:
      - "11311:11311"
    volumes:
      - ./docker/motion_ctrl:/ros_ws/src/motion_ctrl/
      - ./docker/turtlebot3_hospital_sim:/ros_ws/src/turtlebot3_hospital_sim/
      - ./log/:/root/.ros/logger_sim/
    environment:
      - "ROS_HOSTNAME=motion_ctrl"
      - "ROS_MASTER_URI=http://master:11311"
      - "ROBOT_NAME=turtlebot1"
    env_file:
      - .env
    # command: /bin/bash -c "source /ros_ws/devel/setup.bash && roslaunch motion_ctrl base_navigation.launch --wait"
    command: /bin/bash -c "source /ros_ws/devel/setup.bash && roslaunch motion_ctrl base_navigation.launch --wait & rosrun topic_tools relay /move_base_simple/goal /turtlebot1/move_base_simple/goal"
    # command: /bin/bash -c "source /ros_ws/devel/setup.bash && roscore"
    tty: true
    privileged: true
    networks:
      morsesimnet:
        ipv4_address: 10.6.0.6

# rosrun gmapping slam_gmapping scan:=/turtlebot1/lidar

  # rosbridge:
  #   build:
  #     context: ./docker
  #     dockerfile: Dockerfile.rosbridge
  #   tty: true
  #   command: /bin/bash -c "source /opt/ros/melodic/setup.bash && roslaunch --wait rosbridge_server rosbridge_websocket.launch --wait"
  #   environment:
  #     - "ROS_MASTER_URI=http://master:11311"
  #   depends_on:
  #     - motion_ctrl
  #   links:
  #     - motion_ctrl
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     morsesimnet:
  #       ipv4_address: 10.6.0.106

  webviz:
    image: cruise/webviz
    ports:
      - "8080:8080"
    depends_on:
      - motion_ctrl
      # http://10.6.0.12:8080/?rosbridge-websocket-url=ws://10.6.0.106:9090
      # http://10.6.0.12:8080/?rosbridge-websocket-url=ws://10.6.0.6:9090&layout-url=/home/gastd/Downloads/layout.json
    networks:
      morsesimnet:
        ipv4_address: 10.6.0.12

  rviz:
    build:
      context: ./docker
      dockerfile: Dockerfile.app
    # image: my_melodic_image
    runtime: nvidia
    depends_on:
      - motion_ctrl
    devices:
      - "/dev/dri"
      - "/dev/snd"
    environment:
      - "ROS_HOSTNAME=rviz"
      - "ROS_MASTER_URI=http://master:11311"
      - "QT_X11_NO_MITSHM=1"
      - "DISPLAY=$DISPLAY"
      # - "XAUTHORITY=$XAUTH"
      - "QT_GRAPHICSSYSTEM=native"
      - "PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native"
    volumes:
      - "$HOME/.Xauthority:/root/.Xauthority:rw"
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /var/run/dbus:/var/run/dbus:ro
      - /etc/machine-id:/etc/machine-id:ro
      - ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native
      - ~/.config/pulse/cookie:/root/.config/pulse/cookie
      - ./docker/motion_ctrl/launch/simulation.rviz:/ros_ws/src/hos/simulation.rviz
    expose:
      - "8081"
      - "3000"
      - "3001"
    command: /bin/bash -c "source /ros_ws/devel/setup.bash && export ROS_NAMESPACE=/turtlebot1 && rviz -d /ros_ws/src/hos/simulation.rviz"
    tty: true
    privileged: true
    # network_mode: host
    # links:
    #   - motion_ctrl
    networks:
      - morsesimnet

  # motion_ctrl2:
  #   build:
  #     context: ./docker
  #     dockerfile: Dockerfile.motion
  #   container_name: motion_ctrl2
  #   depends_on:
  #     - master
  #   volumes:
  #     - ./docker/motion_ctrl:/ros_ws/src/motion_ctrl/
  #     - ./docker/turtlebot3_hospital_sim:/ros_ws/src/turtlebot3_hospital_sim/
  #   environment:
  #     - "ROS_HOSTNAME=motion_ctrl2"
  #     - "ROS_MASTER_URI=http://master:11311"
  #     - "ROBOT_NAME=turtlebot2"
  #   env_file:
  #     - .env
  #   command: /bin/bash -c "source /ros_ws/devel/setup.bash && roslaunch motion_ctrl base_navigation.launch --wait"
  #   tty: true
  #   networks:
  #     morsesimnet:
  #       ipv4_address: 10.6.0.7

  pytree_test1:
    build:
      context: ./docker
      dockerfile: Dockerfile.pytrees
    container_name: pytree_test1
    runtime: runc
    depends_on:
      - motion_ctrl
    env_file:
      - .env
    devices:
      - "/dev/dri"
      - "/dev/snd"
    environment:
      - "ROS_HOSTNAME=pytree_test1"
      - "ROS_MASTER_URI=http://master:11311"
      - "QT_X11_NO_MITSHM=1"
      - "DISPLAY=$DISPLAY"
      - "XAUTHORITY=$XAUTH"
      - "QT_GRAPHICSSYSTEM=native"
      - "PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native"
      - "ROBOT_NAME=turtlebot1"
      - 'ROBOT_CONFIG={"avg_speed": 0.8, "battery_consumption_rate": 0.0024000000000000002,
      "battery_level": 0.64, "id": 0, "local_plan": [["navigation", ["PC Room 2",
      [[-28.5, 18.0, -1.57], [-28, 16], [-27.23, 18.0, -1.57]]]], ["approach_person",
      ["nurse"]], ["authenticate_person", ["nurse"]], ["operate_drawer", ["open"]],
      ["send_message", ["nurse"]], ["wait_message", ["r1"]], ["operate_drawer", ["close"]],
      ["navigation", ["Pharmacy", [[-27.23, 18.0, -1.57], [-28, 16], [-20, 16], [-13,
      16], [0, 16], [0, 3], [-2, 2.5]]]], ["approach_robot", ["lab_arm"]], ["operate_drawer",
      ["open"]], ["send_message", ["lab_arm"]], ["wait_message", ["r1"]], ["operate_drawer",
      ["close"]]], "location": "PC Room 1", "position": [-28.5, 18.0, -1.57], "skills":
      ["approach_person", "approach_robot", "authenticate_person", "deposit", "navigation",
      "operate_drawer", "pick_up"]}'
    volumes:
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /var/run/dbus:/var/run/dbus:ro
      - /etc/machine-id:/etc/machine-id:ro
      - ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native
      - ~/.config/pulse/cookie:/root/.config/pulse/cookie
      - ./docker/bridge/bridge.py:/ros_ws/src/bridge.py
      - ./docker/py_trees_ros_behaviors:/ros_ws/src/py_trees_ros_behaviors/
    # command: /bin/bash -c "source /ros_ws/install/setup.bash && ros2 topic pub /std_out std_msgs/msg/String data:\ \'HelloWorld\'\ "
    # command: /bin/bash -c "
#colcon build && source /ros_ws/install/setup.bash && ros2 launch py_trees_ros_behaviors tutorial_seven_docking_cancelling_failing_launch.py
    tty: true
    networks:
      morsesimnet:
        ipv4_address: 10.6.0.8

  pytree_bridge:
    build:
      context: ./docker
      dockerfile: Dockerfile.pytrees
    container_name: pytree_bridge
    runtime: runc
    depends_on:
      - motion_ctrl
    env_file:
      - .env
    devices:
      - "/dev/dri"
      - "/dev/snd"
    environment:
      - "ROS_HOSTNAME=pytree_bridge"
      - "ROS_MASTER_URI=http://master:11311"
      - "QT_X11_NO_MITSHM=1"
      - "DISPLAY=$DISPLAY"
      - "XAUTHORITY=$XAUTH"
      - "QT_GRAPHICSSYSTEM=native"
      - "PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native"
      - "ROBOT_NAME=turtlebot1"
      - 'ROBOT_CONFIG={"avg_speed": 0.8, "battery_consumption_rate": 0.0024000000000000002,
      "battery_level": 0.64, "id": 0, "local_plan": [["navigation", ["IC Room 1",
      [[-28.5, 18.0, -1.57], [-19, 16], [-37, 15], [-39.44, 33.98, 0.0]]]], ["approach_person",
      ["nurse"]], ["authenticate_person", ["nurse"]], ["operate_drawer", ["open"]],
      ["send_message", ["nurse"]], ["wait_message", ["r1"]], ["operate_drawer", ["close"]],
      ["navigation", ["Pharmacy", [[-39.44, 33.98, 0.0], [-37, 15], [-19, 16], [0,
      8], [-2, 2.6]]]], ["approach_robot", ["lab_arm"]], ["operate_drawer", ["open"]],
      ["send_message", ["lab_arm"]], ["wait_message", ["r1"]], ["operate_drawer",
      ["close"]]], "location": "PC Room 1", "position": [-28.5, 18.0, -1.57], "skills":
      ["approach_person", "approach_robot", "authenticate_person", "deposit", "navigation",
      "operate_drawer", "pick_up"]}'
    volumes:
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /var/run/dbus:/var/run/dbus:ro
      - /etc/machine-id:/etc/machine-id:ro
      - ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native
      - ~/.config/pulse/cookie:/root/.config/pulse/cookie
      - ./docker/bridge/bridge.py:/ros_ws/src/bridge.py
      - ./docker/py_trees_ros_behaviors:/ros_ws/src/py_trees_ros_behaviors/
    # command: /bin/bash -c "source /ros_ws/install/setup.bash && ros2 topic pub /std_out std_msgs/msg/String data:\ \'HelloWorld\'\ "
    command: /bin/bash -c "source /opt/ros/noetic/setup.bash && ros2 run ros1_bridge dynamic_bridge --bridge-all-topics "
    tty: true
    networks:
      - morsesimnet

  # pytree_test2:
  #   build:
  #     context: ./docker
  #     dockerfile: Dockerfile.pytrees
  #   container_name: pytree_test2
  #   runtime: runc
  #   depends_on:
  #     - motion_ctrl
  #   env_file:
  #     - .env
  #   devices:
  #     - "/dev/dri"
  #     - "/dev/snd"
  #   environment:
  #     - "ROS_HOSTNAME=pytree_test2"
  #     - "ROS_MASTER_URI=http://master:11311"
  #     - "QT_X11_NO_MITSHM=1"
  #     - "DISPLAY=$DISPLAY"
  #     - "XAUTHORITY=$XAUTH"
  #     - "QT_GRAPHICSSYSTEM=native"
  #     - "PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native"
  #     - "ROBOT_NAME=turtlebot1"
  #   volumes:
  #     - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     - /var/run/dbus:/var/run/dbus:ro
  #     - /etc/machine-id:/etc/machine-id:ro
  #     - ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native
  #     - ~/.config/pulse/cookie:/root/.config/pulse/cookie
  #     - ./docker/py_trees_ros_behaviors:/ros_ws/src/py_trees_ros_behaviors/
  #   # command: /bin/bash -c "source /ros_ws/install/setup.bash && ros2 topic pub /std_out std_msgs/msg/String data:\ \'HelloWorld\'\ "
  #   # command: python3 /ros_ws/src/bridge.py
  #   # command: /bin/bash -c "source /opt/ros/noetic/setup.bash && ros2 run ros1_bridge dynamic_bridge --bridge-all-topics "
  #   tty: true
  #   networks:
  #     - morsesimnet

networks:
  morsesimnet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.6.0.0/16
  # hostnet:
  #   name: host
  #   external: true